---
# Setup OCP4 Helper Node

- hosts: all
  vars_files:
    - ../vars/main.yml
  tasks:

  - name: Install needed packages
    yum:
      name:
        - bind
        - bind-utils
        - haproxy
        - httpd
        - vim
        - bash-completion
        - libselinux-python
        - podman
      state: present

  - name: Install packages for DHCP/PXE install
    yum:
      name:
        - dhcp
        - syslinux
        - tftp-server
      state: present
    when: not staticips

  - name: enable service tftp and ensure it is not masked
    systemd:
      name: tftp
      enabled: yes
      masked: no
    
  - name: Write out dhcp file
    template:
      src: ../templates/dhcpd.conf.j2
      dest: /etc/dhcp/dhcpd.conf
    when: not staticips

  - name: Write out named file
    template:
      src: ../templates/named.conf.j2
      dest: /etc/named.conf

  - name: Set zone serial number
    command: "date +%Y%m%d00"
    register: dymanicserialnumber

  - name: Setting serial number as a fact
    set_fact:
      serialnumber: "{{ dymanicserialnumber.stdout }}"
  
  - name: Write out "{{ dns.domain }}" zone file
    template:
      src: ../templates/zonefile.j2
      dest: /var/named/zonefile.db
  
  - name: Write out reverse zone file
    template:
      src: ../templates/reverse.j2
      dest: /var/named/reverse.db
  
  - name: Write out haproxy config file
    template:
      src: ../templates/haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg

  - name: Copy httpd conf file
    copy:
      src: ../files/httpd.conf
      dest: /etc/httpd/conf/httpd.conf

  - name: Create apache directories for installing
    file:
      path: "{{ item }}"
      state: directory
      mode: 0755
    with_items:
      - /var/www/html/install
      - /var/www/html/ignition

  - name: Get OCP4 installer Bios
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.1/latest/rhcos-4.1.0-x86_64-metal-bios.raw.gz
      dest: /var/www/html/install/bios.raw.gz
      mode: 0555

  - name: Open up firewall ports
    firewalld:
      permanent: yes
      immediate: yes
      state: enabled
      port: "{{ item }}"
    with_items:
      - 67/udp
      - 53/tcp
      - 53/udp
      - 443/tcp
      - 80/tcp
      - 8080/tcp
      - 6443/tcp
      - 6443/udp
      - 22623/tcp
      - 22623/udp
      - 9000/tcp
      - 69/udp

  - name: Best effort SELinux repair - DNS
    shell: "restorecon -vR /var/named || true"

  - name: Best effort SELinux repair - Apache
    shell: "restorecon -vR /var/www/html || true"

  - name: Create TFTP config
    file:
      path: /var/lib/tftpboot/pxelinux.cfg
      state: directory
      mode: 0755
    when: not staticips

  - name: Create TFTP RHCOS dir
    file:
      path: /var/lib/tftpboot/rhcos
      state: directory
      mode: 0755
    when: not staticips

  - name: SEBool allow haproxy connect any port
    seboolean:
      name: haproxy_connect_any
      state: yes
      persistent: yes

  - name: Copy over files needed for TFTP
    shell: "cp -a /usr/share/syslinux/* /var/lib/tftpboot"
    when: not staticips

  - name: Get OCP4 installer initramfs
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.1/latest/rhcos-4.1.0-x86_64-installer-initramfs.img
      dest: /var/lib/tftpboot/rhcos/initramfs.img
      mode: 0555
    when: not staticips

  - name: Get OCP4 installer kernel
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.1/latest/rhcos-4.1.0-x86_64-installer-kernel
      dest: /var/lib/tftpboot/rhcos/kernel
      mode: 0555
    when: not staticips

  - name: Set the default tftp file
    template:
      src: ../templates/default.j2
      dest: /var/lib/tftpboot/pxelinux.cfg/default
      mode: 0555
    when: not staticips

  - name: Starting services
    service:
      name: "{{ item }}"
      enabled: yes
      state: started
    with_items:
      - named
      - haproxy
      - httpd

  - name: Starting DHCP/PXE instlal services
    service:
      name: "{{ item }}"
      enabled: yes
      state: started
    with_items:
      - dhcpd
      - tftp
    when: not staticips

  - name: Set the local resolv.conf file
    template:
      src: ../templates/resolv.conf.j2
      dest: /etc/resolv.conf

  - name: Copy info script over
    template:
      src: ../templates/checker.sh.j2
      dest: /usr/local/bin/checker.sh
      owner: root
      group: root
      mode: 0555

  - name: Dowloading OC clients 
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.1.4/openshift-client-linux-4.1.4.tar.gz
      dest: /usr/local/src/openshift-client-linux-4.1.4.tar.gz

  - name: Dowloading OpenShift Installer
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.1.4/openshift-install-linux-4.1.4.tar.gz
      dest: /usr/local/src/openshift-install-linux-4.1.4.tar.gz

  - name: Unarchiving OC clients
    unarchive:
      src: /usr/local/src/openshift-client-linux-4.1.4.tar.gz
      dest: /usr/local/bin
      remote_src: yes

  - name: Unarchiving OpenShift Installer
    unarchive:
      src: /usr/local/src/openshift-install-linux-4.1.4.tar.gz
      dest: /usr/local/bin
      remote_src: yes

  - name: Removing files that are not needed
    file:
      path: /usr/local/bin/README.md
      state: absent

  - name: Downloading filetranspiler source
    git:
      repo: https://github.com/ashcrow/filetranspiler
      dest: /usr/local/src/filetranspiler

  - name: Building filetranspiler
    shell: "podman build /usr/local/src/filetranspiler -t filetranspiler:latest"

  - name: Installing filetranspiler
    copy:
      src: ../files/filetranspiler
      dest: /usr/local/bin/filetranspiler
      mode: '0555'

  - name:  Information about this install
    debug:
      msg:
        - "Please run /usr/local/bin/checker.sh for information"
